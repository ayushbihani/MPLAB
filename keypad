assume cs:code,ds:data

data segment
pa equ 20A0h
pb equ 20A1h
pc equ 20A2h
cr equ 20A3
count db ?
rowval db ?
colval db ?
scode db ?
rowmsg db "Row is = $"
colmsg db "column is = $ "
key db "key is = $"

display macro
    mov ah,09
    int 21h
endm
data ends

code segment

start :mov ax,data
        mov ds,ax
        mov dx,cr
        mov al,90h
        out dx,al
        
  rpt:  
      mov bl,04
      mov bh,03
      mov cl,10h
      
  row:
      mov dx,pc
      mov al,bl
      out dx,al
      
      mov dx,pa
      in al,dx
      cmp al,00h ;to check if no key was pressed
      jne ahead ;if pressed then go ahead
      shr bl,1 
      sub cl,08
      
      dec bh
      jnz row
      jmp rpt ;infinite loop 
      
    ahead : 
          mov row,bh ;row value in bh
          mov ah,1 ;now to calculate which column 
          
    check:
          rcr al,1 ;when any key is pressed the column no is in form of binary and is stored in al ,itll be 1 so u search for that 1
          jc next
          inc ah   ; column number
          inc cl ;what key youve pressed value be in cl 
          jmp check
          
    next :
          mov col,ah
          mov scode,cl
          mov ah,00
          lea dx,rowmsg ;printing row value
          display ;macro 
          mov al,row
          call disp
          lea dx,colmsg
          display 
          mov al,col
          call disp
          lea dx,key
          display
          mov al,scode
          call disp
          
          mov ah,4ch 
          int 21h
          
        
          
          
          
          
          
          
  disp proc ;works upto 16 bit hexcadecimal ,decimals numbers .prints the number in decimal .number should be in AX
            
            aam
            mov dl,ah
            add dl,30h
            mov ah,02
            int 21h
            
            mov dl,al
            add dl,30h
            mov ah,02
            int 21h
            
            
            
                  
                  ret
                  disp endp
  code ends
          end start
          
